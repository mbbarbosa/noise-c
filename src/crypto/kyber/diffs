diff --git a/src/crypto/kyber/indcpa.c b/src/crypto/kyber/indcpa.c
index 60f4059..fb4a261 100644
--- a/src/crypto/kyber/indcpa.c
+++ b/src/crypto/kyber/indcpa.c
@@ -212,7 +212,7 @@ void indcpa_keypair(uint8_t pk[KYBER_INDCPA_PUBLICKEYBYTES],
   uint8_t nonce = 0;
   polyvec a[KYBER_K], e, pkpv, skpv;
 
-  randombytes(buf, KYBER_SYMBYTES);
+  noise_rand_bytes(buf, KYBER_SYMBYTES);
   hash_g(buf, buf, KYBER_SYMBYTES);
 
   gen_a(a, publicseed);
diff --git a/src/crypto/kyber/kem.c b/src/crypto/kyber/kem.c
index f376bd2..22e7bf8 100644
--- a/src/crypto/kyber/kem.c
+++ b/src/crypto/kyber/kem.c
@@ -29,7 +29,7 @@ int crypto_kem_keypair(uint8_t *pk,
     sk[i+KYBER_INDCPA_SECRETKEYBYTES] = pk[i];
   hash_h(sk+KYBER_SECRETKEYBYTES-2*KYBER_SYMBYTES, pk, KYBER_PUBLICKEYBYTES);
   /* Value z for pseudo-random output on reject */
-  randombytes(sk+KYBER_SECRETKEYBYTES-KYBER_SYMBYTES, KYBER_SYMBYTES);
+  noise_rand_bytes(sk+KYBER_SECRETKEYBYTES-KYBER_SYMBYTES, KYBER_SYMBYTES);
   return 0;
 }
 
@@ -56,7 +56,7 @@ int crypto_kem_enc(uint8_t *ct,
   /* Will contain key, coins */
   uint8_t kr[2*KYBER_SYMBYTES];
 
-  randombytes(buf, KYBER_SYMBYTES);
+  noise_rand_bytes(buf, KYBER_SYMBYTES);
   /* Don't release system RNG output */
   hash_h(buf, buf, KYBER_SYMBYTES);
 
diff --git a/src/crypto/kyber/randombytes.h b/src/crypto/kyber/randombytes.h
index 619b7f9..c06bfe1 100644
--- a/src/crypto/kyber/randombytes.h
+++ b/src/crypto/kyber/randombytes.h
@@ -4,6 +4,6 @@
 #include <stddef.h>
 #include <stdint.h>
 
-void randombytes(uint8_t *out, size_t outlen);
+void noise_rand_bytes(uint8_t *out, size_t outlen);
 
 #endif
